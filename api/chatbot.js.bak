
// Stubbed chat functions removed for privacy/security
function chatStub() { return Promise.resolve({status: "disabled", message: "Chat has been disabled."}); }
/* openai require removed */

function generateFallbackResponse(message) {
  if (!message) return "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?";
  const lower = message.toLowerCase();
  if (lower.includes("—Ç—É—Ä") || lower.includes("360")) {
    return "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ç—É—Ä—ã 360¬∞ –ø–æ–∫–∞–∂—É—Ç –≤–∞—à–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –≤ –ª—É—á—à–µ–º —Å–≤–µ—Ç–µ. –ó–≤–æ–Ω–∏—Ç–µ: +7 940 943-55-55!";
  }
  if (lower.includes("—Ü–µ–Ω–∞") || lower.includes("—Å—Ç–æ–∏–º–æ—Å—Ç—å") || lower.includes("—Å–∫–æ–ª—å–∫–æ")) {
    return "–£ –Ω–∞—Å –µ—Å—Ç—å —Ç–∞—Ä–∏—Ñ—ã –Ω–∞ –ª—é–±–æ–π –±—é–¥–∂–µ—Ç: –æ—Ç 15,000‚ÇΩ. –î–ª—è —Ç–æ—á–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ: +7 940 766-66-44.";
  }
  if (lower.includes("–∫–æ–Ω—Ç–∞–∫—Ç") || lower.includes("—Ç–µ–ª–µ—Ñ–æ–Ω") || lower.includes("–∞–¥—Ä–µ—Å")) {
    return "üìç –ê–¥—Ä–µ—Å: –≥. –°—É—Ö—É–º, —É–ª. –≠—à–±–∞ 166\nüìû –¢–µ–ª–µ—Ñ–æ–Ω—ã: +7 940 766-66-44, +7 940 943-55-55\nüìß Email: Service-abh@yandex.ru";
  }
  return "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ Smart 360 ü§ñ –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏.";
}

module.exports = async (req, res) => {
  try {
    if (req.method !== "POST") {
      res.status(405).json({ message: "Method not allowed" });
      return;
    }
    const { message } = req.body || {};
    if (!message) {
      res.status(400).json({ message: "Message is required" });
      return;
    }

    const apiKey = process.env.OPENAI_API_KEY /* removed */ || process.env.VERCEL_OPENAI_API_KEY;
    if (apiKey && apiKey !== "default_key") {
      try {
        const client = /* removed OpenAI init */
        const prompt = `–¢—ã - –ø–æ–º–æ—â–Ω–∏–∫ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ Smart 360. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ. –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${message}`;
        const aiResponse = await client.chat.completions.create({
          model: "gpt-4o",
          messages: [{ role: "user", content: prompt }],
          max_tokens: 300,
          temperature: 0.7,
        });
        const text = aiResponse?.choices?.[0]?.message?.content || "";
        res.json({ message: text });
        return;
      } catch (err) {
        console.error("OpenAI API error:", err);
        // fall through to fallback
      }
    }

    // Fallback canned response
    const response = generateFallbackResponse(message);
    res.json({ message: response });
  } catch (err) {
    console.error("API error:", err);
    res.status(500).json({ message: "Internal server error" });
  }
};
